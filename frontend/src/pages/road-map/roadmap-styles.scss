@import "../../assets/styles/addons/variables",
  "../../assets/styles/addons/mixins";

@include main-setting;

$con: 2;
$alpha: 75%;

.module-box-model {
  &::after {
    background-color: oklch(0.39 0.09 240.876 / #{$alpha});
  }
  &:hover::after {
    background-color: oklch(0.39 0.09 240.876);
  }
}

.module-position {
  &::after {
    background-color: oklch(0.38 0.063 188.416 / #{$alpha});
  }
  &:hover::after {
    background-color: oklch(0.38 0.063 188.416);
  }
}

.module-flex {
  &::after {
    background-color: oklch(0.4 0.17 325.612 / #{$alpha});
  }
  &:hover::after {
    background-color: oklch(0.4 0.17 325.612);
  }
}

.module-grid {
  &::after {
    background-color: oklch(0.41 0.112 45.904 / #{$alpha});
  }
  &:hover::after {
    background-color: oklch(0.41 0.112 45.904);
  }
}

.module-others {
  &::after {
    background-color: oklch(0.4 0.153 2.432 / #{$alpha});
  }
  &:hover::after {
    background-color: oklch(0.4 0.153 2.432);
  }
}

// background of roadmap
.roadmap-background {
  display: flex;
  position: relative;
  max-width: 1440px;
  max-height: 810px;
  aspect-ratio: 16/9;
  max-width: $max-width;
  width: 100%;
  margin-inline: auto;
  margin-block: 2.5rem;
  background-size: contain;
  background-repeat: no-repeat;
  opacity: 0.1;
  animation: blur 0.4s linear forwards;
}

.roadmap-background-img {
  position: absolute;
  width: 100%;
  height: auto;
  aspect-ratio: 16/9;
}

// grid that contains roadmap__items
.roadmap {
  display: grid;
  grid-template-columns: repeat(64, 1fr);
  grid-template-rows: repeat(36, 1fr);
  width: 100%;
  height: 100%;
  z-index: 1;
}

@keyframes blur {
  100% {
    opacity: 1;
  }
}

// roadmap__item, it is used to select level on the map
.roadmap__item {
  display: flex;
  position: relative;
  width: 100%;
  height: 100%;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  span {
    font-size: clamp(0.6rem, 1.65vw, 1.5rem);
    font-weight: 600;
    color: $secondary-color;
    /* @media (width < 43rem) {
      font-size: 0.5rem;
    }*/
  }
  &::after {
    content: "";
    position: absolute;
    width: clamp(1.5rem, 3vw, 3.5rem);
    height: clamp(1.5rem, 3vw, 3.5rem);
    opacity: 1;
    border-radius: 19% 81% 14% 86% / 80% 10% 90% 20%;
    filter: blur(0px);
    z-index: -1;
    transition: 0.5s;
  }
  &:hover::after {
    opacity: 1;
    border-radius: 19% 81% 14% 86% / 80% 10% 90% 20%;
    animation: light 1s linear forwards;
  }
  &.active::after {
    background-color: $error-color;
  }
}

@keyframes light {
  0% {
    border-radius: 19% 81% 14% 86% / 80% 10% 90% 20%;
    transform: rotate(0deg) scale(1);
  }
  50% {
    border-radius: 56% 44% 70% 30% / 22% 68% 32% 78%;
    transform: rotate(45deg) scale(1.2);
  }
  100% {
    border-radius: 19% 81% 14% 86% / 80% 10% 90% 20%;
    transform: rotate(90deg) scale(1);
  }
}

// locked is additional class for roadmap__item,
// it is used when user's level is too low
.locked {
  cursor: not-allowed;
  &::after {
    background-color: rgba($bg-disabled, $alpha);
  }
  img {
    width: 2vw;
    height: 2vw;
    transform: rotate(5deg);
  }
  /* 
  reset transform on hover, we need to be specific 
  because of some crazy css settings made before...
  */
  &:hover {
    img {
      transform: none;
      rotate: 5deg;
    }
    &::after {
      animation: none;
    }
    // transform: rotate(5deg) scale(1.1);
  }
}

// below are postions of each level on the map
.one {
  grid-column: (9 * $con) / span 2;
  grid-row: (3 * $con) / span 2;
}

.two {
  grid-column: (7 * $con) / span 2;
  grid-row: (5 * $con) / span 2;
}

.three {
  grid-column: (5 * $con) / span 2;
  grid-row: (7 * $con) / span 2;
  left: -0.6vw;
}

.four {
  grid-column: (6 * $con) / span 2;
  grid-row: (9 * $con) / span 2;
}

.five {
  grid-column: (8 * $con) / span 2;
  grid-row: (10 * $con) / span 2;
}

.six {
  grid-column: (10 * $con) / span 2;
  grid-row: (11 * $con) / span 2;
  top: -1vw;
}

.seven {
  grid-column: (12 * $con) / span 2;
  grid-row: (10 * $con) / span 2;
  top: 1vw;
}

.eight {
  grid-column: (14 * $con) / span 2;
  grid-row: (10 * $con) / span 2;
  top: -0.25vw;
}

.nine {
  grid-column: (16 * $con) / span 2;
  grid-row: (9 * $con) / span 2;
  left: -0.3vw;
}

.ten {
  grid-column: (17 * $con) / span 2;
  grid-row: (8 * $con) / span 2;
  top: -0.5vw;
}

.eleven {
  grid-column: (18 * $con) / span 2;
  grid-row: (6 * $con) / span 2;
  left: 0.5vw;
}

.twelve {
  grid-column: (19 * $con) / span 2;
  grid-row: (4 * $con) / span 2;
  left: -1.2vw;
}

.thirteen {
  grid-column: (18 * $con) / span 2;
  grid-row: (2 * $con) / span 2;
  left: 1vw;
}

.fourteen {
  grid-column: (21 * $con) / span 2;
  grid-row: (1 * $con) / span 2;
}

.fifteen {
  grid-column: (23 * $con) / span 2;
  grid-row: (3 * $con) / span 2;
}

.sixteen {
  grid-column: (23 * $con) / span 2;
  grid-row: (5 * $con) / span 2;
  left: 1.5vw;
}

.seventeen {
  grid-column: (24 * $con) / span 2;
  grid-row: (7 * $con) / span 2;
}

.eighteen {
  grid-column: (24 * $con) / span 2;
  grid-row: (9 * $con) / span 2;
  left: -0.5vw;
}

.nineteen {
  grid-column: (25.5 * $con) / span 2;
  grid-row: (11 * $con) / span 2;
}

.twenty {
  grid-column: (26 * $con) / span 2;
  grid-row: (13 * $con) / span 2;
}

.twenty-one {
  grid-column: (25 * $con) / span 2;
  grid-row: (15 * $con) / span 2;
}

.twenty-two {
  grid-column: (23 * $con) / span 2;
  grid-row: (16.5 * $con) / span 2;
}

.twenty-three {
  grid-column: (19.5 * $con) / span 2;
  grid-row: (16.5 * $con) / span 2;
}

.twenty-four {
  grid-column: (16.5 * $con) / span 2;
  grid-row: (16 * $con) / span 2;
}

.twenty-five {
  grid-column: (15 * $con) / span 2;
  grid-row: (16 * $con) / span 2;
}

.jello-horizontal {
  -webkit-animation: jello-horizontal 0.9s both;
  animation: jello-horizontal 0.9s both;
}

/* ----------------------------------------------
 * Generated by Animista on 2024-2-10 15:45:19
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */
@keyframes jello-horizontal {
  0% {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
  30% {
    -webkit-transform: scale3d(1.25, 0.75, 1);
    transform: scale3d(1.25, 0.75, 1);
  }
  40% {
    -webkit-transform: scale3d(0.75, 1.25, 1);
    transform: scale3d(0.75, 1.25, 1);
  }
  50% {
    -webkit-transform: scale3d(1.15, 0.85, 1);
    transform: scale3d(1.15, 0.85, 1);
  }
  65% {
    -webkit-transform: scale3d(0.95, 1.05, 1);
    transform: scale3d(0.95, 1.05, 1);
  }
  75% {
    -webkit-transform: scale3d(1.05, 0.95, 1);
    transform: scale3d(1.05, 0.95, 1);
  }
  100% {
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
  }
}
